{"ast":null,"code":"import _objectSpread from\"R:/NavAyush_SIH-main/NavAyush_SIH-main/ayursutra/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from'react';import{useAuth}from'../contexts/AuthContext';import api from'../services/api';export const usePatientProgress=()=>{const[progressData,setProgressData]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const{user}=useAuth();// Mock progress data for development\nconst mockProgressData={overall:{currentProgress:65,totalSessions:21,completedSessions:14,currentPhase:'pradhankarma',startDate:'2025-01-01',estimatedEndDate:'2025-01-28'},metrics:{energy:{current:9,previous:6,trend:'up'},sleep:{current:9,previous:7,trend:'up'},digestion:{current:9,previous:5,trend:'up'},stress:{current:3,previous:8,trend:'down'},pain:{current:2,previous:7,trend:'down'}},timeline:[{date:'2025-01-01',progress:10,energy:6,sleep:7,digestion:5,stress:8,pain:7},{date:'2025-01-03',progress:18,energy:7,sleep:7,digestion:6,stress:7,pain:6},{date:'2025-01-05',progress:25,energy:7,sleep:8,digestion:7,stress:6,pain:5},{date:'2025-01-07',progress:35,energy:8,sleep:8,digestion:7,stress:5,pain:4},{date:'2025-01-09',progress:42,energy:8,sleep:9,digestion:8,stress:4,pain:3},{date:'2025-01-11',progress:50,energy:9,sleep:9,digestion:8,stress:4,pain:3},{date:'2025-01-13',progress:58,energy:9,sleep:8,digestion:9,stress:3,pain:2},{date:'2025-01-15',progress:65,energy:9,sleep:9,digestion:9,stress:3,pain:2}],symptoms:[{name:'Chronic Fatigue',before:9,current:2,improvement:78},{name:'Digestive Issues',before:7,current:2,improvement:71},{name:'Sleep Problems',before:6,current:1,improvement:83},{name:'Joint Pain',before:5,current:1,improvement:80},{name:'Stress & Anxiety',before:8,current:3,improvement:62}],constitution:{vata:{balance:75,trend:'stable'},pitta:{balance:85,trend:'improving'},kapha:{balance:70,trend:'improving'}},milestones:[{id:1,name:'Treatment Started',date:'2025-01-01',completed:true},{id:2,name:'Purvakarma Completed',date:'2025-01-07',completed:true},{id:3,name:'Energy Improvement',date:'2025-01-08',completed:true},{id:4,name:'Midpoint Reached',date:'2025-01-12',completed:true},{id:5,name:'Symptom Relief',date:'2025-01-15',completed:false},{id:6,name:'Pradhankarma Complete',date:'2025-01-20',completed:false},{id:7,name:'Treatment Complete',date:'2025-01-28',completed:false}]};const fetchProgressData=async()=>{try{setLoading(true);setError(null);// In production, this would be actual API calls\n// const response = await api.get('/patient/progress');\n// setProgressData(response.data);\n// For now, use mock data\nsetTimeout(()=>{setProgressData(mockProgressData);setLoading(false);},800);}catch(err){setError(err.message||'Failed to fetch progress data');setLoading(false);}};const updateProgressEntry=async(date,metrics)=>{try{setLoading(true);// In production:\n// const response = await api.post('/patient/progress', { date, ...metrics });\n// Mock implementation\nsetProgressData(prev=>_objectSpread(_objectSpread({},prev),{},{timeline:[...prev.timeline,_objectSpread({date},metrics)].sort((a,b)=>new Date(a.date)-new Date(b.date))}));setLoading(false);}catch(err){setError(err.message||'Failed to update progress');setLoading(false);throw err;}};const getProgressTrend=function(metric){let days=arguments.length>1&&arguments[1]!==undefined?arguments[1]:7;if(!(progressData!==null&&progressData!==void 0&&progressData.timeline))return null;const recentData=progressData.timeline.slice(-days);if(recentData.length<2)return null;const firstValue=recentData[0][metric];const lastValue=recentData[recentData.length-1][metric];const change=lastValue-firstValue;const percentChange=change/firstValue*100;return{change,percentChange,trend:change>0?'up':change<0?'down':'stable'};};const getSymptomImprovement=symptomName=>{if(!(progressData!==null&&progressData!==void 0&&progressData.symptoms))return null;const symptom=progressData.symptoms.find(s=>s.name===symptomName);return symptom?symptom.improvement:null;};const getCurrentPhaseProgress=()=>{if(!(progressData!==null&&progressData!==void 0&&progressData.overall))return null;const{currentPhase,currentProgress}=progressData.overall;// Calculate phase-specific progress\nconst phaseRanges={purvakarma:{start:0,end:25},pradhankarma:{start:25,end:80},paschatkarma:{start:80,end:100}};const range=phaseRanges[currentPhase];if(!range)return null;const phaseProgress=(currentProgress-range.start)/(range.end-range.start)*100;return{phase:currentPhase,progress:Math.max(0,Math.min(100,phaseProgress)),isComplete:currentProgress>=range.end};};const getWeeklyReport=()=>{var _lastWeek$,_lastWeek,_lastWeek2,_lastWeek$2;if(!(progressData!==null&&progressData!==void 0&&progressData.timeline))return null;const lastWeek=progressData.timeline.slice(-7);if(lastWeek.length===0)return null;const metrics=['energy','sleep','digestion','stress','pain'];const averages={};metrics.forEach(metric=>{const values=lastWeek.map(day=>day[metric]).filter(val=>val!==undefined);averages[metric]=values.length>0?values.reduce((sum,val)=>sum+val,0)/values.length:0;});return{period:\"\".concat((_lastWeek$=lastWeek[0])===null||_lastWeek$===void 0?void 0:_lastWeek$.date,\" - \").concat((_lastWeek=lastWeek[lastWeek.length-1])===null||_lastWeek===void 0?void 0:_lastWeek.date),averages,totalSessions:lastWeek.length,progressGain:((_lastWeek2=lastWeek[lastWeek.length-1])===null||_lastWeek2===void 0?void 0:_lastWeek2.progress)-((_lastWeek$2=lastWeek[0])===null||_lastWeek$2===void 0?void 0:_lastWeek$2.progress)};};const getConstitutionBalance=()=>{return(progressData===null||progressData===void 0?void 0:progressData.constitution)||null;};const getMilestones=()=>{return(progressData===null||progressData===void 0?void 0:progressData.milestones)||[];};const getNextMilestone=()=>{if(!(progressData!==null&&progressData!==void 0&&progressData.milestones))return null;return progressData.milestones.find(m=>!m.completed);};useEffect(()=>{if(user){fetchProgressData();}},[user]);return{progressData,loading,error,updateProgressEntry,getProgressTrend,getSymptomImprovement,getCurrentPhaseProgress,getWeeklyReport,getConstitutionBalance,getMilestones,getNextMilestone,refetch:fetchProgressData};};","map":{"version":3,"names":["useState","useEffect","useAuth","api","usePatientProgress","progressData","setProgressData","loading","setLoading","error","setError","user","mockProgressData","overall","currentProgress","totalSessions","completedSessions","currentPhase","startDate","estimatedEndDate","metrics","energy","current","previous","trend","sleep","digestion","stress","pain","timeline","date","progress","symptoms","name","before","improvement","constitution","vata","balance","pitta","kapha","milestones","id","completed","fetchProgressData","setTimeout","err","message","updateProgressEntry","prev","_objectSpread","sort","a","b","Date","getProgressTrend","metric","days","arguments","length","undefined","recentData","slice","firstValue","lastValue","change","percentChange","getSymptomImprovement","symptomName","symptom","find","s","getCurrentPhaseProgress","phaseRanges","purvakarma","start","end","pradhankarma","paschatkarma","range","phaseProgress","phase","Math","max","min","isComplete","getWeeklyReport","_lastWeek$","_lastWeek","_lastWeek2","_lastWeek$2","lastWeek","averages","forEach","values","map","day","filter","val","reduce","sum","period","concat","progressGain","getConstitutionBalance","getMilestones","getNextMilestone","m","refetch"],"sources":["R:/NavAyush_SIH-main/NavAyush_SIH-main/ayursutra/frontend/src/hooks/usePatientProgress.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport api from '../services/api';\r\n\r\nexport const usePatientProgress = () => {\r\n  const [progressData, setProgressData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { user } = useAuth();\r\n\r\n  // Mock progress data for development\r\n  const mockProgressData = {\r\n    overall: {\r\n      currentProgress: 65,\r\n      totalSessions: 21,\r\n      completedSessions: 14,\r\n      currentPhase: 'pradhankarma',\r\n      startDate: '2025-01-01',\r\n      estimatedEndDate: '2025-01-28'\r\n    },\r\n    metrics: {\r\n      energy: { current: 9, previous: 6, trend: 'up' },\r\n      sleep: { current: 9, previous: 7, trend: 'up' },\r\n      digestion: { current: 9, previous: 5, trend: 'up' },\r\n      stress: { current: 3, previous: 8, trend: 'down' },\r\n      pain: { current: 2, previous: 7, trend: 'down' }\r\n    },\r\n    timeline: [\r\n      { date: '2025-01-01', progress: 10, energy: 6, sleep: 7, digestion: 5, stress: 8, pain: 7 },\r\n      { date: '2025-01-03', progress: 18, energy: 7, sleep: 7, digestion: 6, stress: 7, pain: 6 },\r\n      { date: '2025-01-05', progress: 25, energy: 7, sleep: 8, digestion: 7, stress: 6, pain: 5 },\r\n      { date: '2025-01-07', progress: 35, energy: 8, sleep: 8, digestion: 7, stress: 5, pain: 4 },\r\n      { date: '2025-01-09', progress: 42, energy: 8, sleep: 9, digestion: 8, stress: 4, pain: 3 },\r\n      { date: '2025-01-11', progress: 50, energy: 9, sleep: 9, digestion: 8, stress: 4, pain: 3 },\r\n      { date: '2025-01-13', progress: 58, energy: 9, sleep: 8, digestion: 9, stress: 3, pain: 2 },\r\n      { date: '2025-01-15', progress: 65, energy: 9, sleep: 9, digestion: 9, stress: 3, pain: 2 }\r\n    ],\r\n    symptoms: [\r\n      { name: 'Chronic Fatigue', before: 9, current: 2, improvement: 78 },\r\n      { name: 'Digestive Issues', before: 7, current: 2, improvement: 71 },\r\n      { name: 'Sleep Problems', before: 6, current: 1, improvement: 83 },\r\n      { name: 'Joint Pain', before: 5, current: 1, improvement: 80 },\r\n      { name: 'Stress & Anxiety', before: 8, current: 3, improvement: 62 }\r\n    ],\r\n    constitution: {\r\n      vata: { balance: 75, trend: 'stable' },\r\n      pitta: { balance: 85, trend: 'improving' },\r\n      kapha: { balance: 70, trend: 'improving' }\r\n    },\r\n    milestones: [\r\n      { id: 1, name: 'Treatment Started', date: '2025-01-01', completed: true },\r\n      { id: 2, name: 'Purvakarma Completed', date: '2025-01-07', completed: true },\r\n      { id: 3, name: 'Energy Improvement', date: '2025-01-08', completed: true },\r\n      { id: 4, name: 'Midpoint Reached', date: '2025-01-12', completed: true },\r\n      { id: 5, name: 'Symptom Relief', date: '2025-01-15', completed: false },\r\n      { id: 6, name: 'Pradhankarma Complete', date: '2025-01-20', completed: false },\r\n      { id: 7, name: 'Treatment Complete', date: '2025-01-28', completed: false }\r\n    ]\r\n  };\r\n\r\n  const fetchProgressData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // In production, this would be actual API calls\r\n      // const response = await api.get('/patient/progress');\r\n      // setProgressData(response.data);\r\n      \r\n      // For now, use mock data\r\n      setTimeout(() => {\r\n        setProgressData(mockProgressData);\r\n        setLoading(false);\r\n      }, 800);\r\n      \r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch progress data');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProgressEntry = async (date, metrics) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // In production:\r\n      // const response = await api.post('/patient/progress', { date, ...metrics });\r\n      \r\n      // Mock implementation\r\n      setProgressData(prev => ({\r\n        ...prev,\r\n        timeline: [...prev.timeline, { date, ...metrics }].sort((a, b) => new Date(a.date) - new Date(b.date))\r\n      }));\r\n      \r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to update progress');\r\n      setLoading(false);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const getProgressTrend = (metric, days = 7) => {\r\n    if (!progressData?.timeline) return null;\r\n    \r\n    const recentData = progressData.timeline.slice(-days);\r\n    if (recentData.length < 2) return null;\r\n    \r\n    const firstValue = recentData[0][metric];\r\n    const lastValue = recentData[recentData.length - 1][metric];\r\n    \r\n    const change = lastValue - firstValue;\r\n    const percentChange = (change / firstValue) * 100;\r\n    \r\n    return {\r\n      change,\r\n      percentChange,\r\n      trend: change > 0 ? 'up' : change < 0 ? 'down' : 'stable'\r\n    };\r\n  };\r\n\r\n  const getSymptomImprovement = (symptomName) => {\r\n    if (!progressData?.symptoms) return null;\r\n    \r\n    const symptom = progressData.symptoms.find(s => s.name === symptomName);\r\n    return symptom ? symptom.improvement : null;\r\n  };\r\n\r\n  const getCurrentPhaseProgress = () => {\r\n    if (!progressData?.overall) return null;\r\n    \r\n    const { currentPhase, currentProgress } = progressData.overall;\r\n    \r\n    // Calculate phase-specific progress\r\n    const phaseRanges = {\r\n      purvakarma: { start: 0, end: 25 },\r\n      pradhankarma: { start: 25, end: 80 },\r\n      paschatkarma: { start: 80, end: 100 }\r\n    };\r\n    \r\n    const range = phaseRanges[currentPhase];\r\n    if (!range) return null;\r\n    \r\n    const phaseProgress = ((currentProgress - range.start) / (range.end - range.start)) * 100;\r\n    \r\n    return {\r\n      phase: currentPhase,\r\n      progress: Math.max(0, Math.min(100, phaseProgress)),\r\n      isComplete: currentProgress >= range.end\r\n    };\r\n  };\r\n\r\n  const getWeeklyReport = () => {\r\n    if (!progressData?.timeline) return null;\r\n    \r\n    const lastWeek = progressData.timeline.slice(-7);\r\n    if (lastWeek.length === 0) return null;\r\n    \r\n    const metrics = ['energy', 'sleep', 'digestion', 'stress', 'pain'];\r\n    const averages = {};\r\n    \r\n    metrics.forEach(metric => {\r\n      const values = lastWeek.map(day => day[metric]).filter(val => val !== undefined);\r\n      averages[metric] = values.length > 0 \r\n        ? values.reduce((sum, val) => sum + val, 0) / values.length \r\n        : 0;\r\n    });\r\n    \r\n    return {\r\n      period: `${lastWeek[0]?.date} - ${lastWeek[lastWeek.length - 1]?.date}`,\r\n      averages,\r\n      totalSessions: lastWeek.length,\r\n      progressGain: lastWeek[lastWeek.length - 1]?.progress - lastWeek[0]?.progress\r\n    };\r\n  };\r\n\r\n  const getConstitutionBalance = () => {\r\n    return progressData?.constitution || null;\r\n  };\r\n\r\n  const getMilestones = () => {\r\n    return progressData?.milestones || [];\r\n  };\r\n\r\n  const getNextMilestone = () => {\r\n    if (!progressData?.milestones) return null;\r\n    return progressData.milestones.find(m => !m.completed);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchProgressData();\r\n    }\r\n  }, [user]);\r\n\r\n  return {\r\n    progressData,\r\n    loading,\r\n    error,\r\n    updateProgressEntry,\r\n    getProgressTrend,\r\n    getSymptomImprovement,\r\n    getCurrentPhaseProgress,\r\n    getWeeklyReport,\r\n    getConstitutionBalance,\r\n    getMilestones,\r\n    getNextMilestone,\r\n    refetch: fetchProgressData\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}