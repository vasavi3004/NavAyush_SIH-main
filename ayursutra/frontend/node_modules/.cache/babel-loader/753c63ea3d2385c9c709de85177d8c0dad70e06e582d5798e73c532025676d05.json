{"ast":null,"code":"import _objectSpread from\"C:/Users/Utkarsh/OneDrive/Desktop/AYURSUTRA DRAFT/ayursutra/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Check for stored auth data on app load\nconst storedToken=localStorage.getItem('authToken');const storedUser=localStorage.getItem('authUser');if(storedToken&&storedUser){setToken(storedToken);setUser(JSON.parse(storedUser));}setLoading(false);},[]);const login=async(email,password)=>{try{const response=await fetch('http://localhost:5000/api/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const data=await response.json();if(data.success){setUser(data.user);setToken(data.token);localStorage.setItem('authToken',data.token);localStorage.setItem('authUser',JSON.stringify(data.user));return{success:true,user:data.user};}else{return{success:false,message:data.message};}}catch(error){return{success:false,message:'Network error. Please try again.'};}};const register=async userData=>{try{const response=await fetch('http://localhost:5000/api/auth/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});const data=await response.json();if(data.success){setUser(data.user);setToken(data.token);localStorage.setItem('authToken',data.token);localStorage.setItem('authUser',JSON.stringify(data.user));return{success:true,user:data.user};}else{return{success:false,message:data.message};}}catch(error){return{success:false,message:'Network error. Please try again.'};}};const updateProfile=async profileData=>{try{const response=await fetch('http://localhost:5000/api/auth/profile',{method:'PUT',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify(profileData)});const data=await response.json();if(data.success){const updatedUser=_objectSpread(_objectSpread({},user),data.user);setUser(updatedUser);localStorage.setItem('authUser',JSON.stringify(updatedUser));return{success:true,user:updatedUser};}else{return{success:false,message:data.message};}}catch(error){return{success:false,message:'Network error. Please try again.'};}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('authToken');localStorage.removeItem('authUser');};const value={user,token,login,register,updateProfile,logout,loading,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","loading","setLoading","storedToken","localStorage","getItem","storedUser","JSON","parse","login","email","password","response","fetch","method","headers","body","stringify","data","json","success","setItem","message","error","register","userData","updateProfile","profileData","concat","updatedUser","_objectSpread","logout","removeItem","value","isAuthenticated","Provider"],"sources":["C:/Users/Utkarsh/OneDrive/Desktop/AYURSUTRA DRAFT/ayursutra/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored auth data on app load\n    const storedToken = localStorage.getItem('authToken');\n    const storedUser = localStorage.getItem('authUser');\n    \n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setUser(data.user);\n        setToken(data.token);\n        localStorage.setItem('authToken', data.token);\n        localStorage.setItem('authUser', JSON.stringify(data.user));\n        return { success: true, user: data.user };\n      } else {\n        return { success: false, message: data.message };\n      }\n    } catch (error) {\n      return { success: false, message: 'Network error. Please try again.' };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setUser(data.user);\n        setToken(data.token);\n        localStorage.setItem('authToken', data.token);\n        localStorage.setItem('authUser', JSON.stringify(data.user));\n        return { success: true, user: data.user };\n      } else {\n        return { success: false, message: data.message };\n      }\n    } catch (error) {\n      return { success: false, message: 'Network error. Please try again.' };\n    }\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/profile', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(profileData),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        const updatedUser = { ...user, ...data.user };\n        setUser(updatedUser);\n        localStorage.setItem('authUser', JSON.stringify(updatedUser));\n        return { success: true, user: updatedUser };\n      } else {\n        return { success: false, message: data.message };\n      }\n    } catch (error) {\n      return { success: false, message: 'Network error. Please try again.' };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('authUser');\n  };\n\n  const value = {\n    user,\n    token,\n    login,\n    register,\n    updateProfile,\n    logout,\n    loading,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}