{"ast":null,"code":"import React from'react';import{BrowserRouter as Router,Routes,Route,Navigate,useLocation}from'react-router-dom';import{AuthProvider,useAuth}from'./contexts/AuthContext';import ProtectedRoute from'./components/ProtectedRoute';import ErrorBoundary from'./components/ErrorBoundary';import Navbar from'./components/Navbar';import ChatWidget from'./components/ChatWidget';import LandingPage from'./pages/LandingPage';import Login from'./pages/auth/Login';import Register from'./pages/auth/Register';import PatientDashboard from'./components/patient/Dashboard';import PractitionerDashboard from'./components/practitioner/Dashboard';import BookAppointment from'./pages/patient/BookAppointment';import TreatmentHistory from'./pages/patient/TreatmentHistory';import Profile from'./pages/patient/Profile';// Component to conditionally render navbar\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConditionalNavbar=()=>{const{user}=useAuth();const location=useLocation();// Show navbar only on authenticated pages or when user is logged in\nconst publicPages=['/','/login','/register'];const isPublicPage=publicPages.includes(location.pathname);// Show navbar if user is authenticated OR if on public page but user exists\nif(!user&&isPublicPage){return null;}return/*#__PURE__*/_jsx(Navbar,{});};function App(){return/*#__PURE__*/_jsx(ErrorBoundary,{children:/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(ConditionalNavbar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(LandingPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{})}),/*#__PURE__*/_jsx(Route,{path:\"/patient/dashboard\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(PatientDashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/patient/book-appointment\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(BookAppointment,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/patient/profile\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Profile,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/patient/treatment-history\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(TreatmentHistory,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/practitioner/dashboard\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(PractitionerDashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]})}),/*#__PURE__*/_jsx(ChatWidget,{})]})})});}export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","useLocation","AuthProvider","useAuth","ProtectedRoute","ErrorBoundary","Navbar","ChatWidget","LandingPage","Login","Register","PatientDashboard","PractitionerDashboard","BookAppointment","TreatmentHistory","Profile","jsx","_jsx","jsxs","_jsxs","ConditionalNavbar","user","location","publicPages","isPublicPage","includes","pathname","App","children","className","path","element","to","replace"],"sources":["R:/NavAyush_SIH-main/ayursutra/frontend/src/App.jsx"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport Navbar from './components/Navbar';\r\nimport ChatWidget from './components/ChatWidget';\r\nimport LandingPage from './pages/LandingPage';\r\nimport Login from './pages/auth/Login';\r\nimport Register from './pages/auth/Register';\r\nimport PatientDashboard from './components/patient/Dashboard';\r\nimport PractitionerDashboard from './components/practitioner/Dashboard';\r\nimport BookAppointment from './pages/patient/BookAppointment';\r\nimport TreatmentHistory from './pages/patient/TreatmentHistory';\r\nimport Profile from './pages/patient/Profile';\r\n\r\n// Component to conditionally render navbar\r\nconst ConditionalNavbar = () => {\r\n  const { user } = useAuth();\r\n  const location = useLocation();\r\n  \r\n  // Show navbar only on authenticated pages or when user is logged in\r\n  const publicPages = ['/', '/login', '/register'];\r\n  const isPublicPage = publicPages.includes(location.pathname);\r\n  \r\n  // Show navbar if user is authenticated OR if on public page but user exists\r\n  if (!user && isPublicPage) {\r\n    return null;\r\n  }\r\n  \r\n  return <Navbar />;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <ErrorBoundary>\r\n      <AuthProvider>\r\n        <Router>\r\n          <ConditionalNavbar />\r\n          <div className=\"App\">\r\n            <Routes>\r\n              {/* Public Routes */}\r\n              <Route path=\"/\" element={<LandingPage />} />\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path=\"/register\" element={<Register />} />\r\n              \r\n              {/* Protected Patient Routes */}\r\n              <Route \r\n                path=\"/patient/dashboard\" \r\n                element={\r\n                  <ProtectedRoute>\r\n                    <PatientDashboard />\r\n                  </ProtectedRoute>\r\n                } \r\n              />\r\n              <Route \r\n                path=\"/patient/book-appointment\" \r\n                element={\r\n                  <ProtectedRoute>\r\n                    <BookAppointment />\r\n                  </ProtectedRoute>\r\n                } \r\n              />\r\n              <Route \r\n                path=\"/patient/profile\" \r\n                element={\r\n                  <ProtectedRoute>\r\n                    <Profile />\r\n                  </ProtectedRoute>\r\n                } \r\n              />\r\n              <Route \r\n                path=\"/patient/treatment-history\" \r\n                element={\r\n                  <ProtectedRoute>\r\n                    <TreatmentHistory />\r\n                  </ProtectedRoute>\r\n                } \r\n              />\r\n              \r\n              {/* Protected Practitioner Routes */}\r\n              <Route \r\n                path=\"/practitioner/dashboard\" \r\n                element={\r\n                  <ProtectedRoute>\r\n                    <PractitionerDashboard />\r\n                  </ProtectedRoute>\r\n                } \r\n              />\r\n              \r\n              {/* Redirect unknown routes to landing page */}\r\n              <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n            </Routes>\r\n          </div>\r\n          {/* Global floating chatbot */}\r\n          <ChatWidget />\r\n        </Router>\r\n      </AuthProvider>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}